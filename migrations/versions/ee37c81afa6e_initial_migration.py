"""Initial migration

Revision ID: ee37c81afa6e
Revises:
Create Date: 2021-12-29 08:57:17.948710

"""
from alembic import op
import sqlalchemy as sa
import app


# revision identifiers, used by Alembic.
revision = 'ee37c81afa6e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('page',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('underground',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('OTHER', 'MINE', 'SHAFT', 'ADIT', 'PINGE', 'QUARRY', 'SHELTER', 'MILITARY_UNDERGROUND', 'URBAN_UNDERGROUND', 'MILL_RACE', 'DRAINAGE', 'TUNNEL', name='undergroundtype'), nullable=False),
    sa.Column('state', sa.Enum('UNKNOWN', 'WORKING', 'MUSEUM', 'PRESERVED', 'NOT_BAD', 'BAD', 'DEMOLISHED', name='undergroundstate'), nullable=False),
    sa.Column('accessibility', sa.Enum('INACCESSIBLE', 'WORKING', 'GUIDED_TOURS', 'GUARDED', 'LOCKED', 'FREELY_ACCESSIBLE', 'DIGGING_REQUIRED', name='undergroundaccessibility'), nullable=True),
    sa.Column('tools', sa.String(length=32), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('geofond_id', sa.Integer(), nullable=True),
    sa.Column('abandoned_year', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('urbex',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('OTHER', 'HOUSE', 'MANSION', 'RECREATION', 'ARMY', 'FACTORY', 'TECHNOLOGY', name='urbextype'), nullable=False),
    sa.Column('state', sa.Enum('UNKNOWN', 'LIKE_USED', 'FURNISHED', 'CLEANED_OUT', 'FALLING_APART', 'DEMOLISHED', 'UNDER_RESTORE', 'RESTORED', 'MUSEUM', name='urbexstate'), nullable=False),
    sa.Column('accessibility', sa.Enum('INACCESSIBLE', 'GUIDED_TOURS', 'GUARDED', 'MONITORED', 'FREELY_ACCESSIBLE', name='urbexaccessibility'), nullable=True),
    sa.Column('abandoned_year', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('password', sa.LargeBinary(length=128), nullable=False),
    sa.Column('first_name', sa.String(length=20), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('about', sa.String(length=10000), nullable=True),
    sa.Column('photo_path', sa.String(length=64), nullable=True),
    sa.Column('role', sa.Enum('ROOT', 'ADMIN', 'MODERATOR', 'CONTRIBUTOR', 'USER', 'NEWBIE', name='userrole'), nullable=False),
    sa.Column('event_check_ts', sa.DateTime(), nullable=False),
    sa.Column('location_check_ts', sa.DateTime(), nullable=False),
    sa.Column('login_check_ts', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('ban',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reason', sa.String(length=1024), nullable=False),
    sa.Column('until', sa.DateTime(), nullable=False),
    sa.Column('permanent', sa.Boolean(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('bookmarks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='unique_user_record')
    )
    op.create_table('event_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('type', sa.Enum('OTHER', 'CREATE', 'MODIFY', 'DELETE', name='eventtype'), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'NORMAL', 'HIGH', 'CRITICAL', name='eventseverity'), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('invitation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=85), nullable=False),
    sa.Column('reason', sa.String(length=1024), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('state', sa.Enum('WAITING', 'APPROVED', 'REGISTERED', 'TIMED_OUT', 'DENIED', name='invitationstate'), nullable=False),
    sa.Column('invited_by_id', sa.Integer(), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['invited_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('login_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('result', sa.Enum('SUCCESS', 'NOT_ACTIVE', 'BANNED', 'INVALID_PASSWORD', 'INVALID_EMAIL', name='loginresult'), nullable=False),
    sa.Column('ip', sa.String(length=46), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('system', sa.String(length=64), nullable=True),
    sa.Column('browser', sa.String(length=64), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_login_log_result'), 'login_log', ['result'], unique=False)
    op.create_table('material',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('OTHER', 'COAL', 'LIGNITE', 'URANIUM', 'FIRE_CLAY', 'KAOLINITE', 'SAND', 'GRAPHITE', 'IRON', 'GOLD', 'COPPER', 'SILVER', 'TIN', 'SLATE', 'BARYTE', 'FLUORITE', 'FELDSPAR', name='materialtype'), nullable=False),
    sa.Column('underground_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['underground_id'], ['underground.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('thread',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(length=32), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('sender_seen', sa.Boolean(), nullable=False),
    sa.Column('recipient_seen', sa.Boolean(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_thread_timestamp'), 'thread', ['timestamp'], unique=False)
    op.create_table('upload',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('type', sa.Enum('OTHER', 'PHOTO', 'HISTORICAL_PHOTO', 'MAP', 'ARTICLE', 'BOOK', 'DOCUMENT', name='uploadtype'), nullable=False),
    sa.Column('path', sa.String(length=256), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('object_uuid', app.database.UUID(length=16), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_upload_object_uuid'), 'upload', ['object_uuid'], unique=False)
    op.create_table('location',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', app.database.UUID(length=16), nullable=True),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('about', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('latitude', app.database.Latitude(), nullable=False),
    sa.Column('longitude', app.database.Longitude(), nullable=False),
    sa.Column('published', sa.Boolean(), nullable=False),
    sa.Column('country', sa.Enum('OTHER', 'CZECHIA', 'SLOVAKIA', 'POLAND', 'GERMANY', 'AUSTRIA', name='country'), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=True),
    sa.Column('urbex_id', sa.Integer(), nullable=True),
    sa.Column('underground_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('NOT(urbex_id IS NOT NULL AND underground_id IS NOT NULL)'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['photo_id'], ['upload.id'], ),
    sa.ForeignKeyConstraint(['underground_id'], ['underground.id'], ),
    sa.ForeignKeyConstraint(['urbex_id'], ['urbex.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('underground_id'),
    sa.UniqueConstraint('urbex_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_location_owner_id'), 'location', ['owner_id'], unique=False)
    op.create_table('message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['thread_id'], ['thread.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_message_timestamp'), 'message', ['timestamp'], unique=False)
    op.create_table('bookmark_association',
    sa.Column('bookmark_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bookmark_id'], ['bookmarks.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], )
    )
    op.create_table('link',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('visit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', app.database.UUID(length=16), nullable=False),
    sa.Column('visited_on', sa.Date(), nullable=False),
    sa.Column('comment', sa.String(length=2048), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('visit')
    op.drop_table('link')
    op.drop_table('bookmark_association')
    op.drop_index(op.f('ix_message_timestamp'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_location_owner_id'), table_name='location')
    op.drop_table('location')
    op.drop_index(op.f('ix_upload_object_uuid'), table_name='upload')
    op.drop_table('upload')
    op.drop_index(op.f('ix_thread_timestamp'), table_name='thread')
    op.drop_table('thread')
    op.drop_table('material')
    op.drop_index(op.f('ix_login_log_result'), table_name='login_log')
    op.drop_table('login_log')
    op.drop_table('invitation')
    op.drop_table('event_log')
    op.drop_table('bookmarks')
    op.drop_table('ban')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('urbex')
    op.drop_table('underground')
    op.drop_table('page')
    # ### end Alembic commands ###
